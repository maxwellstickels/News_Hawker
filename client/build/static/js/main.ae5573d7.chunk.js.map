{"version":3,"sources":["utils/queries.js","components/Header.js","components/Main.js","components/Footer.js","components/NotFound.js","utils/auth.js","utils/mutations.js","components/Signup.js","components/Login.js","App.js","index.js"],"names":["GET_ARTICLE","gql","defineLordIconElement","loadAnimation","Header","className","src","trigger","colors","style","width","height","href","Main","props","alt","innerSection","borderTop","outerSection","paddingTop","footerLinks","marginTop","Footer","NotFound","textAlign","fontSize","to","color","textDecoration","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LOGIN_USER","ADD_USER","Signup","useState","username","email","password","formState","setFormState","useMutation","addUser","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","data","Auth","login","handleChange","target","name","value","onSubmit","htmlFor","placeholder","type","id","onChange","Login","error","console","log","App","useLazyQuery","getArticle","searchState","setSearchState","onSearch","search","backgroundImage","display","onClick","exact","path","component","render","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.ae5573d7.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const GET_ME = gql`\r\n  query getUser($_id: String) {\r\n    me(_id: $_id) {\r\n      _id\r\n      username\r\n      email\r\n      password\r\n      savedArticles {\r\n        source\r\n        authors\r\n        title\r\n        description\r\n        url\r\n        image\r\n        publishedAt\r\n        content\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ARTICLE = gql`\r\nquery getArticle($search:String!){\r\n  getArticle(search:$search) {\r\n    title\r\n    description\r\n    content\r\n    url\r\n    image\r\n    publishedAt\r\n    authors\r\n  }\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nimport { loadAnimation } from \"lottie-web\";\r\nimport { defineLordIconElement } from \"lord-icon-element\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n        <section className=\"wings\">\r\n            <lord-icon\r\n                src=\"https://cdn.lordicon.com/hpxruznz.json\"\r\n                trigger=\"loop\"\r\n                colors=\"primary:#ea5a5a,secondary:#08a88a\"\r\n                style={{width: '80px', height:'80px'}}>\r\n            </lord-icon>\r\n        </section>\r\n        <h1><i>News Hawker</i></h1>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"/\">Saved Stories</a></li>\r\n                <li><a href=\"/\">Logout</a></li>\r\n            </ul>\r\n        </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\ndefineLordIconElement(loadAnimation);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <main>\r\n        <div className=\"article-box\">\r\n            <section className=\"article-content\">\r\n                <h4 className=\"article-title\">Article Title</h4>\r\n                <p className=\"article-source\">Article Source</p>\r\n                <p className=\"article-text\">Article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text.</p>\r\n            </section>\r\n            <img className=\"article-image\" src=\"https://via.placeholder.com/120x478\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"article-box\">\r\n            <section className=\"article-content\">\r\n                <h4 className=\"article-title saved\">Article Title</h4>\r\n                <p className=\"article-source\">Article Source</p>\r\n                <p className=\"article-text\">Article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text.</p>\r\n            </section>\r\n            <img className=\"article-image\" src=\"https://via.placeholder.com/200x340\" alt=\"\"/>\r\n        </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst innerSection = {\r\n  height: \"90px\",\r\n  width: \"100%\",\r\n  borderTop: \"1px solid #882200\",\r\n};\r\n\r\nconst outerSection = {\r\n  paddingTop: \"3px\",\r\n  borderTop: \"1px solid #aa0000\",\r\n};\r\n\r\nconst footerLinks = {\r\n  marginTop: \"5px\"\r\n};\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n        <div style={outerSection}>\r\n            <section style={innerSection}>\r\n                <h2 style={footerLinks}>\r\n                    <a href=\"https://github.com/Delaalex/\">Alejandro</a> | <a href=\"https://github.com/JG-77\">Jessie</a> | <a href=\"https://github.com/maxwellstickels/\">Max</a> | <a href=\"https://github.com/djony88\">Nikola</a>\r\n                </h2>\r\n            </section>\r\n        </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport \"../App.css\";\r\n\r\nfunction NotFound(props) {\r\n  return (\r\n    <main>\r\n        <div style={{height:\"70px\"}}></div>\r\n        <p style={{textAlign:\"center\", fontSize:\"72px\"}}><u>404</u></p>\r\n        <p style={{textAlign:\"center\"}}> The page you are looking for does not exist! Sorry!</p>\r\n        <p style={{textAlign:\"center\"}}><Link to=\"/\" style={{color: \"#aaaaaa\", textDecoration: \"none\"}}>← Go to Homepage</Link></p>\r\n        <div style={{height:\"100px\"}}></div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    // get user data\r\n    getProfile() {\r\n      return decode(this.getToken());\r\n    }\r\n  \r\n    // check if user's logged in\r\n    loggedIn() {\r\n      // Checks if there is a saved token and it's still valid\r\n      const token = this.getToken();\r\n      return !!token && !this.isTokenExpired(token);\r\n    }\r\n  \r\n    // check if token is expired\r\n    isTokenExpired(token) {\r\n      try {\r\n        const decoded = decode(token);\r\n        if (decoded.exp < Date.now() / 1000) {\r\n          return true;\r\n        } else return false;\r\n      } catch (err) {\r\n        return false;\r\n      }\r\n    }\r\n  \r\n    getToken() {\r\n      // Retrieves the user token from localStorage\r\n      return localStorage.getItem('id_token');\r\n    }\r\n  \r\n    login(idToken) {\r\n      // Saves user token to localStorage\r\n      localStorage.setItem('id_token', idToken);\r\n      window.location.assign('/');\r\n    }\r\n  \r\n    logout() {\r\n      // Clear user token and profile data from localStorage\r\n      localStorage.removeItem('id_token');\r\n      // this will reload the page and reset the state of the application\r\n      window.location.assign('/');\r\n    }\r\n  }\r\n\r\n\r\nexport default new AuthService();","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//saving articles for each user to access\r\nexport const SAVE_ARTICLE = gql`\r\n  mutation saveArticle(\r\n    $title: String!\r\n    $description: String!\r\n    $content: String!\r\n    $url: String!\r\n    $image: String\r\n    $publishedAt: String\r\n  ) {\r\n    saveArticle(\r\n      title: $title\r\n      description: $description\r\n      content: $content\r\n      url: $url\r\n      publishedAt: $publishedAt\r\n      image: $image\r\n    ) {\r\n      _id\r\n      userID\r\n      title\r\n      description\r\n      content\r\n      url\r\n      publishedAt\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n//removing saved articles from dashboard\r\nexport const REMOVE_ARTICLE = gql`\r\n  mutation remove($_id: ID!) {\r\n    removeArticle(_id: $_id) {\r\n      _id\r\n      userID\r\n      title\r\n      description\r\n      content\r\n      url\r\n      publishedAt\r\n      image\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({username: '', email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        username: formState.username,\r\n        email: formState.email,\r\n        password: formState.password,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <div>\r\n        <Link to=\"/login\">← Go to Login</Link>\r\n        <h2>Signup</h2>\r\n        <form onSubmit={handleFormSubmit}>\r\n          <div>\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input\r\n              placeholder=\"Username\"\r\n              name=\"username\"\r\n              type=\"username\"\r\n              id=\"username\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              placeholder=\"youremail@test.com\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"pwd\">Password:</label>\r\n            <input\r\n              placeholder=\"******\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"pwd\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <div>\r\n      <Link to=\"/signup\">← Go to Signup</Link>\r\n\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div>\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p>The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Login;","import './App.css';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { GET_ARTICLE } from './utils/queries';\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Signup from \"./components/Signup\";\r\nimport Login from \"./components/Login\";\r\n// import Search from './components/Search';\r\n// import { search } from './utils/API'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [getArticle, { data }] = useLazyQuery(GET_ARTICLE);\r\n  console.log(data);\r\n\r\n  const [searchState, setSearchState] = useState('');\r\n\r\n  const onSearch = async () => {\r\n    // let result = await search(searchState);\r\n    console.log(searchState)\r\n  \r\n    getArticle({variables: {search:searchState}});\r\n  }\r\n  \r\n  const spaceDiv = {\r\n    height: \"60px\"\r\n  };\r\n\r\n  const inlineBlock = {\r\n    display: \"inline-block\"\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"body-overlay\" style={{backgroundImage:\"url(brick.jpeg)\"}}>\r\n        <Header/>\r\n        <div id=\"search\">\r\n          <div style={inlineBlock}>\r\n              <h3 className=\"search-header\"><b>SEARCH ARTICLE BY NAME: </b></h3>\r\n              <input id=\"topic-search\" onChange={(event)=> {\r\n                let { name, value } = event.target;\r\n                console.log(name);\r\n                setSearchState(value);\r\n              }}/>\r\n              <button id=\"topic-submit\" onClick={onSearch}><i>SUBMIT</i></button>\r\n          </div>\r\n        </div>\r\n        <Switch>\r\n          <Route exact path='/' component={Main} />\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='/signup' component={Signup} />\r\n          {/*<Route exact path='/saved' component={SavedArticles}/>*/}\r\n          <Route render={() => <NotFound/>} />\r\n        </Switch>\r\n        <div style={spaceDiv}></div>\r\n        <Footer/>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n    <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}