{"version":3,"sources":["components/Header.js","utils/auth.js","utils/queries.js","components/Main.js","utils/localStorage.js","components/Footer.js","components/NotFound.js","utils/mutations.js","components/Signup.js","components/Login.js","components/SavedArticles.js","App.js","index.js"],"names":["defineLordIconElement","loadAnimation","Header","className","src","trigger","colors","style","width","height","to","id","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","GET_ME","gql","GET_ARTICLE","Main","props","results","useLazyQuery","getArticle","data","useState","searchState","setSearchState","JSON","parse","savedNews","setSavedNews","onSearch","a","console","log","variables","search","handleSaveArticle","articleId","articleToSave","find","article","Auth","loggedIn","newsIdArr","length","stringify","ok","Error","error","display","onChange","event","target","value","name","onClick","map","i","href","url","title","publishedAt","substring","description","backgroundImage","image","some","savedArticleId","innerSection","borderTop","outerSection","paddingTop","footerLinks","marginTop","Footer","NotFound","textAlign","fontSize","color","textDecoration","LOGIN_USER","ADD_USER","REMOVE_ARTICLE","Signup","username","email","password","formState","setFormState","useMutation","addUser","handleFormSubmit","preventDefault","mutationResponse","login","handleChange","onSubmit","htmlFor","placeholder","type","margin","Login","SavedArticles","loading","userData","me","App","exact","path","component","render","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.42abb1b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadAnimation } from \"lottie-web\";\r\nimport { defineLordIconElement } from \"lord-icon-element\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n        <section className=\"wings\">\r\n            <lord-icon\r\n                src=\"https://cdn.lordicon.com/hpxruznz.json\"\r\n                trigger=\"loop\"\r\n                colors=\"primary:#ea5a5a,secondary:#08a88a\"\r\n                style={{width: '80px', height:'80px'}}>\r\n            </lord-icon>\r\n        </section>\r\n        <h1><Link to=\"/\" id=\"header-link\"><i>News Hawker</i></Link></h1>\r\n        <nav>\r\n            <ul>\r\n                <li><Link to=\"/saved\">Saved Stories</Link></li>\r\n                <li><Link to=\"/login\">Login</Link></li>\r\n            </ul>\r\n        </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\ndefineLordIconElement(loadAnimation);\r\n\r\nexport default Header;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    // get user data\r\n    getProfile() {\r\n      return decode(this.getToken());\r\n    }\r\n  \r\n    // check if user's logged in\r\n    loggedIn() {\r\n      // Checks if there is a saved token and it's still valid\r\n      const token = this.getToken();\r\n      return !!token && !this.isTokenExpired(token);\r\n    }\r\n  \r\n    // check if token is expired\r\n    isTokenExpired(token) {\r\n      try {\r\n        const decoded = decode(token);\r\n        if (decoded.exp < Date.now() / 1000) {\r\n          return true;\r\n        } else return false;\r\n      } catch (err) {\r\n        return false;\r\n      }\r\n    }\r\n  \r\n    getToken() {\r\n      // Retrieves the user token from localStorage\r\n      return localStorage.getItem('id_token');\r\n    }\r\n  \r\n    login(idToken) {\r\n      // Saves user token to localStorage\r\n      localStorage.setItem('id_token', idToken);\r\n      window.location.assign('/');\r\n    }\r\n  \r\n    logout() {\r\n      // Clear user token and profile data from localStorage\r\n      localStorage.removeItem('id_token');\r\n      // this will reload the page and reset the state of the application\r\n      window.location.assign('/');\r\n    }\r\n  }\r\n\r\n\r\nexport default new AuthService();","import { gql } from '@apollo/client';\r\n\r\nexport const GET_ME = gql`\r\n  query getUser($_id: String) {\r\n    me(_id: $_id) {\r\n      _id\r\n      username\r\n      email\r\n      password\r\n      savedArticles {\r\n        title\r\n        description\r\n        url\r\n        image\r\n        publishedAt\r\n        content\r\n        source {\r\n          name\r\n          url\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ARTICLE = gql`\r\n  query getArticle($search: String!) {\r\n    getArticle(search: $search) {\r\n      source {\r\n        name\r\n        url\r\n      }\r\n      title\r\n      description\r\n      content\r\n      url\r\n      image\r\n      publishedAt\r\n      source {\r\n        name\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_SAVED_ARTICLES = gql`\r\n  query getSavedArticles {\r\n    getSavedArticles {\r\n      title\r\n      description\r\n      content\r\n      url\r\n      image\r\n      publishedAt\r\n      source {\r\n        name\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import '../App.css';\r\nimport React, { useState } from 'react';\r\nimport Auth from '../utils/auth';\r\nimport { GET_ARTICLE } from '../utils/queries';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { getSavedNews, savedNewsId } from '../utils/localStorage';\r\n\r\n\r\nfunction Main(props) {\r\n    var results = [];\r\n    const [getArticle, { data }] = useLazyQuery(GET_ARTICLE);\r\n    if (data) {\r\n      results = data.getArticle;\r\n    }\r\n    const [searchState, setSearchState] = useState('');\r\n    const [savedNews, setSavedNews] = useState(getSavedNews());\r\n\r\n    const onSearch = async () => {\r\n        console.log(searchState);\r\n        getArticle({variables: {search:searchState}});\r\n        \r\n    }\r\n\r\n    const handleSaveArticle = async (articleId) => {\r\n      // find the book in `searchedBooks` state by the matching id\r\n      const articleToSave = results.find((article) => article.id === articleId);\r\n  \r\n      // get token\r\n      const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n  \r\n      if (!token) {\r\n        return false;\r\n      }\r\n  \r\n      try {\r\n        const response = await savedNewsId(articleToSave, token);\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n  \r\n        // if book successfully saves to user's account, save book id to state\r\n        setSavedNews([...savedNews, articleToSave.id]);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <section id=\"search\">\r\n              <div style={{display: \"inline-block\"}}>\r\n                  <h3 className=\"search-header\"><b>SEARCH ARTICLE BY NAME:</b></h3>\r\n                  <input id=\"topic-search\" onChange={(event)=> {\r\n                      let { name, value } = event.target;\r\n                      setSearchState(value)\r\n                  }}/>\r\n                  <button id=\"topic-submit\" onClick={onSearch}><i>SUBMIT</i></button>\r\n              </div>\r\n            </section>\r\n            <main>\r\n              {results.map((article, i) => {\r\n                return (\r\n                  <div className=\"article-box\" key={i}>\r\n                      <section className=\"article-content\">\r\n                          <h4 className=\"article-title\"><a href={article.url}>{article.title}</a></h4>\r\n                          <p className=\"article-source\">{article.publishedAt.substring(0, 10)}</p>\r\n                          <p className=\"article-text\">{article.description}</p>\r\n                      </section>\r\n                      <div className=\"article-image\" style={{backgroundImage:\"url(\" + article.image + \")\"}} onClick={() => handleSaveArticle(article.id)}>\r\n                        <div className=\"article-save\">{savedNews?.some((savedArticleId) => savedArticleId === article.id)\r\n                        ? 'This book has already been saved!'\r\n                        : 'Save this Book!'}</div>\r\n                      </div>\r\n                  </div>\r\n                )\r\n              })}\r\n                {/*\r\n                  <div className=\"article-box\">\r\n                    <section className=\"article-content\">\r\n                        <h4 className=\"article-title\">Article Title</h4>\r\n                        <p className=\"article-source\">Article Source</p>\r\n                        <p className=\"article-text\">Article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text.</p>\r\n                    </section>\r\n                    <img className=\"article-image\" src=\"https://via.placeholder.com/120x478\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"article-box\">\r\n                    <section className=\"article-content\">\r\n                        <h4 className=\"article-title saved\">Article Title</h4>\r\n                        <p className=\"article-source\">Article Source</p>\r\n                        <p className=\"article-text\">Article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text.</p>\r\n                    </section>\r\n                    <img className=\"article-image\" src=\"https://via.placeholder.com/200x340\" alt=\"\"/>\r\n                </div>\r\n                */}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n\r\n/*\r\n{searchedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? (\r\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBook(book.bookId)}>\r\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\r\n                        ? 'This book has already been saved!'\r\n                        : 'Save this Book!'}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n*/","export const getSavedNews = () => {\r\n    const savedNewsId = localStorage.getItem('saved_news')\r\n    ? JSON.parse(localStorage.getItem('saved_news'))\r\n    : [];\r\n    return savedNewsId;\r\n};\r\n\r\nexport const savedNewsId = (newsIdArr) => {\r\n    if (newsIdArr.length) {\r\n        localStorage.setItem('saved_news', JSON.stringify(newsIdArr));\r\n    } else {\r\n        localStorage.removeItem('saved_news');\r\n    }\r\n};\r\n\r\nexport const removeNewsId = (newsId) => {\r\n    const savedNewsId = localStorage.getItem('saved_news')\r\n    ? JSON.parse(localStorage.getItem('saved_news'))\r\n    : null;\r\n\r\n    if (!savedNewsId) {\r\n        return false;\r\n    }\r\n\r\n    const updateSavedNewsId = savedNewsId?.filter((savedNewsId) => savedNewsId !== newsId);\r\n    localStorage.setItem('saved_news', JSON.stringify(updateSavedNewsId));\r\n\r\n    return true;\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst innerSection = {\r\n  height: \"90px\",\r\n  width: \"100%\",\r\n  borderTop: \"1px solid #882200\",\r\n};\r\n\r\nconst outerSection = {\r\n  paddingTop: \"3px\",\r\n  borderTop: \"1px solid #aa0000\",\r\n};\r\n\r\nconst footerLinks = {\r\n  marginTop: \"5px\"\r\n};\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n        <div style={outerSection}>\r\n            <section style={innerSection}>\r\n                <h2 style={footerLinks}>\r\n                    <a href=\"https://github.com/Delaalex/\">Alejandro</a> | <a href=\"https://github.com/JG-77\">Jessie</a> | <a href=\"https://github.com/maxwellstickels/\">Max</a> | <a href=\"https://github.com/djony88\">Nikola</a>\r\n                </h2>\r\n            </section>\r\n        </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport \"../App.css\";\r\n\r\nfunction NotFound(props) {\r\n  return (\r\n    <main>\r\n        <div style={{height:\"70px\"}}></div>\r\n        <p style={{textAlign:\"center\", fontSize:\"72px\"}}><u>404</u></p>\r\n        <p style={{textAlign:\"center\"}}> The page you are looking for does not exist! Sorry!</p>\r\n        <p style={{textAlign:\"center\"}}><Link to=\"/\" style={{color: \"#aaaaaa\", textDecoration: \"none\"}}>← Go to Homepage</Link></p>\r\n        <div style={{height:\"100px\"}}></div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//saving articles for each user to access\r\nexport const SAVE_ARTICLE = gql`\r\n  mutation saveArticle(\r\n    $title: String!\r\n    $description: String!\r\n    $content: String!\r\n    $url: String!\r\n    $image: String\r\n    $publishedAt: String\r\n  ) {\r\n    saveArticle(\r\n      title: $title\r\n      description: $description\r\n      content: $content\r\n      url: $url\r\n      publishedAt: $publishedAt\r\n      image: $image\r\n    ) {\r\n      _id\r\n      userID\r\n      title\r\n      description\r\n      content\r\n      url\r\n      publishedAt\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n//removing saved articles from dashboard\r\nexport const REMOVE_ARTICLE = gql`\r\n  mutation remove($_id: ID!) {\r\n    removeArticle(_id: $_id) {\r\n      _id\r\n      userID\r\n      title\r\n      description\r\n      content\r\n      url\r\n      publishedAt\r\n      image\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({username: '', email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        username: formState.username,\r\n        email: formState.email,\r\n        password: formState.password,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"form-container\">\r\n        <h2>Signup</h2>\r\n        <form onSubmit={handleFormSubmit}>\r\n          <div>\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input\r\n              className=\"spaced-input\"\r\n              placeholder=\"Username\"\r\n              name=\"username\"\r\n              type=\"username\"\r\n              id=\"username\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              className=\"spaced-input\"\r\n              placeholder=\"youremail@test.com\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"pwd\">Password:</label>\r\n            <input\r\n              className=\"spaced-input\"\r\n              placeholder=\"******\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"pwd\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" className=\"account-submit\"><i>SUBMIT</i></button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <p style={{textAlign: 'center', margin: \"10px 0\"}}><Link to=\"/login\">Or log in here!</Link></p>\r\n      <div style={{height: \"60px\"}}></div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"form-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div>\r\n          <label htmlFor=\"email\">E-Mail:</label>\r\n          <input\r\n            className=\"spaced-input\"\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            className=\"spaced-input\"\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p>The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <div>\r\n          <button type=\"submit\" className=\"account-submit\"><i>SUBMIT </i></button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <p style={{textAlign: 'center', margin: \"10px 0\"}}><Link to=\"/signup\">Don't have an account? Sign up here!</Link></p>\r\n    <div style={{height: \"60px\"}}></div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Login;","import '../App.css';\r\nimport React from 'react';\r\nimport { useLazyQuery, useMutation } from '@apollo/client';\r\nimport { GET_ME } from '../utils/queries';\r\nimport { REMOVE_ARTICLE } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\nimport { removeNewsId } from '../utils/localStorage';\r\n\r\n\r\nfunction SavedArticles(props) {\r\n\r\n  const { loading, data } = useLazyQuery(GET_ME);\r\n  const [deleteArticle] = useMutation(REMOVE_ARTICLE);\r\n  const userData = data?.me || {};\r\n\r\n  if(!userData?.username) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see this page. Use the navigation links above to sign up or log in!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  const handleDeleteArticle = async (newsId) => {\r\n      const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n      if (!token) {\r\n          return false;\r\n      }\r\n\r\n      try {\r\n          await deleteArticle({\r\n              variables : {newsId: newsId},\r\n              update: cache => {\r\n                const data = cache.readQuery({ query: GET_ME });  \r\n                const userDataCache = data.me;\r\n                const savedArticleCache = userDataCache.savedArticles;\r\n                const updatedArticleCache = savedArticleCache.filter((news) => news.newsId !== newsId);\r\n                data.me.savedArticles = updatedArticleCache;\r\n                cache.writeQuery({ query: GET_ME , data : {data: {...data.me.savedArticles}}})\r\n              }\r\n          });\r\n\r\n          removeNewsId(newsId);\r\n      } catch (err) {\r\n          console.error(err);\r\n      }\r\n  };\r\n\r\n  if (loading) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"article-box\">\r\n                <section className=\"article-content\">\r\n                    <h4 className=\"article-title\">Article Title</h4>\r\n                    <p className=\"article-source\">Article Source</p>\r\n                    <p className=\"article-text\">Article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text.</p>\r\n                </section>\r\n                <div className=\"article-image\" style={{backgroundImage:\"url(https://via.placeholder.com/120x478)\"}}>\r\n                        <div className=\"article-save\">Save</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"article-box\">\r\n                <section className=\"article-content\">\r\n                    <h4 className=\"article-title saved\">Article Title</h4>\r\n                    <p className=\"article-source\">Article Source</p>\r\n                    <p className=\"article-text\">Article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text article text.</p>\r\n                </section>\r\n                <div className=\"article-image\" style={{backgroundImage:\"url(https://via.placeholder.com/200x340)\"}}>\r\n                        <div className=\"article-save\">Save</div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default SavedArticles;","import './App.css';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Signup from \"./components/Signup\";\r\nimport Login from \"./components/Login\";\r\nimport SavedArticles from \"./components/SavedArticles\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const spaceDiv = {\r\n    height: \"60px\"\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"body-overlay\" style={{backgroundImage:\"url(brick.jpeg)\"}}>\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path='/' component={Main} />\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='/signup' component={Signup} />\r\n          <Route exact path='/saved' component={SavedArticles}/>\r\n          <Route render={() => <NotFound/>} />\r\n        </Switch>\r\n        <div style={spaceDiv}></div>\r\n        <Footer/>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n    <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}